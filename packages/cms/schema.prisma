// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model Author {
  id                      Int       @id @default(autoincrement())
  name                    String    @default("")
  email                   String?   @unique
  bio                     String    @default("")
  posts                   Post[]    @relation("Author_posts")
  createdAt               DateTime?
  updatedAt               DateTime? @updatedAt
  from_Post_photographers Post[]    @relation("Post_photographers")
  from_Post_editors       Post[]    @relation("Post_editors")
  from_Post_designers     Post[]    @relation("Post_designers")
  from_Post_engineers     Post[]    @relation("Post_engineers")
  from_Post_reviewers     Post[]    @relation("Post_reviewers")

  @@index([name])
}

model Category {
  id                        Int           @id @default(autoincrement())
  slug                      String        @unique @default("")
  title                     String        @unique @default("")
  status                    String?
  subcategory               Subcategory[] @relation("Category_subcategory")
  heroImage                 Photo?        @relation("Category_heroImage", fields: [heroImageId], references: [id])
  heroImageId               Int?          @map("heroImage")
  ogTitle                   String        @default("")
  ogDescription             String        @default("")
  ogImage                   Photo?        @relation("Category_ogImage", fields: [ogImageId], references: [id])
  ogImageId                 Int?          @map("ogImage")
  createdAt                 DateTime?
  updatedAt                 DateTime?     @updatedAt
  from_Subcategory_category Subcategory[] @relation("Subcategory_category")

  @@index([heroImageId])
  @@index([ogImageId])
}

model Photo {
  id                      Int        @id @default(autoincrement())
  name                    String     @default("")
  imageFile_filesize      Int?
  imageFile_extension     String?
  imageFile_width         Int?
  imageFile_height        Int?
  imageFile_id            String?
  createdAt               DateTime?
  updatedAt               DateTime?  @updatedAt
  from_Category_heroImage Category[] @relation("Category_heroImage")
  from_Category_ogImage   Category[] @relation("Category_ogImage")
  from_Post_heroImage     Post[]     @relation("Post_heroImage")
  from_Post_ogImage       Post[]     @relation("Post_ogImage")

  @@map("Image")
}

model Post {
  id                              Int              @id @default(autoincrement())
  slug                            String           @unique @default("")
  name                            String           @default("")
  subtitle                        String           @default("")
  status                          String?          @default("draft")
  publishedDate                   DateTime?
  subSubcategories                SubSubcategory[] @relation("Post_subSubcategories")
  writers                         Author[]         @relation("Author_posts")
  manualOrderOfWriters            Json?
  photographers                   Author[]         @relation("Post_photographers")
  manualOrderOfPhotographers      Json?
  editors                         Author[]         @relation("Post_editors")
  manualOrderOfEditors            Json?
  designers                       Author[]         @relation("Post_designers")
  manualOrderOfDesigners          Json?
  engineers                       Author[]         @relation("Post_engineers")
  manualOrderOfEngineers          Json?
  reviewers                       Author[]         @relation("Post_reviewers")
  manualOrderOfReviewers          Json?
  otherByline                     String           @default("")
  heroImage                       Photo?           @relation("Post_heroImage", fields: [heroImageId], references: [id])
  heroImageId                     Int?             @map("heroImage")
  heroCaption                     String           @default("")
  heroImageSize                   String?          @default("normal")
  brief                           Json?
  content                         Json?
  readingTime                     Int?
  relatedPosts                    Post[]           @relation("Post_relatedPosts")
  manualOrderOfRelatedPosts       Json?
  ogTitle                         String           @default("")
  ogDescription                   String           @default("")
  ogImage                         Photo?           @relation("Post_ogImage", fields: [ogImageId], references: [id])
  ogImageId                       Int?             @map("ogImage")
  createdAt                       DateTime?
  updatedAt                       DateTime?        @updatedAt
  from_Post_relatedPosts          Post[]           @relation("Post_relatedPosts")
  from_SubSubcategory_relatedPost SubSubcategory[] @relation("SubSubcategory_relatedPost")

  @@index([status])
  @@index([publishedDate])
  @@index([heroImageId])
  @@index([ogImageId])
}

model Subcategory {
  id                              Int              @id @default(autoincrement())
  slug                            String           @unique @default("")
  title                           String           @default("")
  nameForCMS                      String           @unique @default("")
  status                          String?
  category                        Category?        @relation("Subcategory_category", fields: [categoryId], references: [id])
  categoryId                      Int?             @map("category")
  subSubcategory                  SubSubcategory[] @relation("Subcategory_subSubcategory")
  createdAt                       DateTime?
  updatedAt                       DateTime?        @updatedAt
  from_Category_subcategory       Category[]       @relation("Category_subcategory")
  from_SubSubcategory_subcategory SubSubcategory[] @relation("SubSubcategory_subcategory")

  @@index([categoryId])
}

model SubSubcategory {
  id                              Int           @id @default(autoincrement())
  slug                            String        @unique @default("")
  name                            String        @default("")
  nameForCMS                      String        @unique @default("")
  status                          String?
  subcategory                     Subcategory?  @relation("SubSubcategory_subcategory", fields: [subcategoryId], references: [id])
  subcategoryId                   Int?          @map("subcategory")
  relatedPost                     Post[]        @relation("SubSubcategory_relatedPost")
  createdAt                       DateTime?
  updatedAt                       DateTime?     @updatedAt
  from_Post_subSubcategories      Post[]        @relation("Post_subSubcategories")
  from_Subcategory_subSubcategory Subcategory[] @relation("Subcategory_subSubcategory")

  @@index([subcategoryId])
}

model User {
  id          Int       @id @default(autoincrement())
  name        String    @default("")
  email       String    @unique @default("")
  password    String
  role        String
  isProtected Boolean   @default(false)
  createdAt   DateTime?
  updatedAt   DateTime? @updatedAt
}
